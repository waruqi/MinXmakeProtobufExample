name: Build & Push binaries

permissions:
  contents: write

on:
  pull_request:
  push:
      paths-ignore:
        - '.clang-format'
        - '.gitignore'
        - 'License.md'
        - 'README.md'

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        platform:
        - { runner: windows-latest, os: windows, arch: x64,    archive_ext: .zip,    vs_runtime: MT }
        - { runner: windows-latest, os: windows, arch: x64,    archive_ext: .zip,    vs_runtime: MD }
        - { runner: ubuntu-latest,  os: linux,   arch: x86_64, archive_ext: .tar.gz, vs_runtime: none }
        - { runner: macos-latest,   os: macos,   arch: x86_64, archive_ext: .tar.gz, vs_runtime: none }
        #- { runner: macos-latest,   os: macos,   arch: arm64,  archive_ext: .tar.gz, vs_runtime: none }
        mode: [ debug, release, releasedbg, minsizerel ]
        libkind: [shared, static]

    runs-on: ${{ matrix.platform.runner }}

    steps:
    - name: Get current date as package key
      id: cache_key
      run: echo "key=$(date +'%W')" >> $GITHUB_OUTPUT
      shell: bash

    - name: "Set OUTPUT_FILE variable"
      run: echo "OUTPUT_FILE=${{ matrix.platform.os }}_${{ matrix.platform.arch }}_${{ matrix.mode }}_${{ matrix.libkind }}_${{ matrix.platform.vs_runtime }}${{ matrix.platform.archive_ext }}" >> $GITHUB_ENV
      shell: bash

    # Force xmake to a specific folder (for cache)
    - name: Set xmake env
      run: echo "XMAKE_GLOBALDIR=${{ runner.workspace }}/xmake-global" >> $GITHUB_ENV
      shell: bash

    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0 # Clone the whole repository to get correct tags and branches

    # Install xmake
    - name: Setup xmake
      uses: xmake-io/github-action-setup-xmake@v1.2.2
      with:
        xmake-version: branch@dev
        actions-cache-folder: .xmake-cache-W${{ steps.cache_key.outputs.key }}

    # Update xmake repository (in order to have the file that will be cached)
    - name: Update xmake repository
      run: xmake repo --update -vD

    - name: Configure xmake and install dependencies (Windows)
      if: ${{ matrix.platform.os == 'windows' }}
      run: |
        git clone https://github.com/xmake-io/xmake.git --recurse-submodules -b runenvs xmakesrc
        cd xmakesrc/core
        xmake -P .
        cd ../..
        Copy-Item ./xmakesrc/core/build/xmake.exe ./xmakesrc/xmake
        Copy-Item ./xmakesrc/scripts/xrepo.bat ./xmakesrc/xmake
        Copy-Item ./xmakesrc/scripts/xrepo.ps1 ./xmakesrc/xmake
        $Env:XMAKE_MAIN_REPO = "https://github.com/xmake-io/xmake-repo.git"
        $Env:XMAKE_PROGRAM_DIR = $(Resolve-Path ./xmakesrc/xmake)
        Set-Item -Path Env:Path -Value ($Env:XMAKE_PROGRAM_DIR + ";" + $Env:Path)
        xmake config -vD --arch=${{ matrix.platform.arch }} --mode=${{ matrix.mode }} --kind=${{ matrix.libkind }} --vs_runtime=${{ matrix.platform.vs_runtime }} --yes --policies=package.precompiled:n
        xmake build -vD -a -y
        xmake run -vD --group=EXES
